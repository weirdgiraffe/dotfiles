# set -g default-shell "${SHELL}"
set -g default-command "reattach-to-user-namespace -l ${SHELL}"
set -g base-index 1         # enumerate windows starting from 1
set -g renumber-windows on  # renumber windows after they are closed
setw  -g pane-base-index 1  # enumerate panes starting from 1
set -sg escape-time 1       # set no delay for escape key press

# to enable images preview in yazi 
# see: https://yazi-rs.github.io/docs/image-preview/#tmux
set -g allow-passthrough all
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM


# set terminal window title to be a name of tmux window
set-option -g set-titles on
set-option -g set-titles-string "#S / #W"

# new window while keeping current path C-b-c
bind-key c   new-window   -c "#{pane_current_path}"
# new horisontal pane while keeping current path C-b-%
bind-key %   split-window -h -c "#{pane_current_path}"
# new vertical pane while keeping current path C-b-"
bind-key '"' split-window -v -c "#{pane_current_path}"

# vim keybindings for panes traversal
unbind Left
unbind Down
unbind Up
unbind Right
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# do not monitor activity by default to avoid additional distractions
set -g monitor-activity off
# toggle activity monitor using C-b-a
bind a set -w monitor-activity\; display "monitor-activity: #{?monitor-activity,on,off}"

# reload tmux config file using C-b-r
bind M-r source-file ~/.config/tmux/tmux.conf \; display-message "reloading config"
 
 # fix window numbers (when you have closed some windows and numbers are odd) using C-b-w
bind M-w  move-window -r \; display-message "fixing window numbers"
 
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R

# turn on focus events reporting to focus detection in vim
set -g focus-events on

# defautl tmux terminal settings
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

## Mouse support:
set -g mouse off                                         # diasble mouse by default
bind m set -g mouse \; display "mouse: #{?mouse,on,off}" # toggle mouse on and off

# use vim keys for traversal in selection and copy mode
# (note: not copy and paste from system clipboard)
unbind -Tcopy-mode-vi Space
unbind -Tcopy-mode-vi Enter
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-selection

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set-option -w -g wrap-search off

# Stay in copy mode on drag end.
# (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# stop-selection` but it is a bit glitchy.)
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Scroll 3 lines at a time instead of default 5; don't extend dragged selections.
bind-key -T copy-mode-vi WheelUpPane select-pane\; send-keys -t'{mouse}' -X clear-selection\; send-keys -t'{mouse}' -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane\; send-keys -t'{mouse}' -X clear-selection\; send-keys -t'{mouse}' -X -N 3 scroll-down

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# Don't exit copy mode on double or triple click.
bind-key -T copy-mode-vi DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T copy-mode-vi TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel




# automatic window renaming (title)
setw -g automatic-rename on
setw -g automatic-rename-format "#{pane_current_command}"

setw -g alternate-screen on



# ----------------- status and styles ----------------------------

set -g status on
set -g status-interval 1
set -g status-position bottom

# set -g status-style fg=blue,bg=terminal
# set -g message-command-style bg=terminal,fg=orange
# set -g message-style bg=terminal,fg=orange
# set -g window-status-style fg=blue,bg=terminal
# set -g window-status-current-style fg=orange,bg=terminal
# set -g window-style bg=terminal


## === settings for everforest rose-pine scheme
## see: https://rosepinetheme.com/palette/
##

# set -g status-style fg=#3e8fb0,bg=#191724
# set -g message-command-style fg=#ea9a97,bg=#191724
# set -g message-style fg=#ea9a97,bg=#191724
# set -g window-status-style fg=#3e8fb0,bg=#191724
# set -g window-status-current-style fg=#ea9a97,bg=#191724
# set -g window-style bg=terminal

##
## ===
##

## === settings for everforest color scheme
## see palette: https://github.com/sainnhe/everforest/blob/master/palette.md
##

set -g status-style fg=#7fbbb3,bg=#343f44
set -g message-command-style fg=#e69875,bg=#343f44
set -g message-style fg=#e69875,bg=#343f44
set -g window-status-style fg=#7fbbb3,bg=#343f44
set -g window-status-current-style fg=#e69875,bg=#343f44
if-shell "[[ $(cat ~/.local/state/nvim/background.conf) == 'dark' ]]" {
  set -g window-style bg=#2d353b
}

##
## ===
##

set -g window-active-style bg=terminal
set -g window-status-bell-style fg=white,bg=red,bright
set -g window-status-activity-style fg=blue,bg=white,bright
set -g window-status-format "#I:#W#F "
set -g window-status-current-format "#I:#W#F "

## left status displays nothing
set -g status-left-length 0
set -g status-left ""

## allign windows display 
set -g status-justify centre

## right status displays session name, time, and if tmux session is over ssh, then it displays the hostname as well.
set -g status-right "#{?#(echo $SSH_CLIENT),#[fg=orange]󰣀 #H,} #[fg=blue]  #S #[fg=magenta]󰔛 %H:%M "
set -g status-right-length 100

# === pane borders
#

set -g pane-border-format "#[align=centre][#P]"
set -g pane-border-status off
set -g pane-border-lines single
set -g pane-border-indicators colour
set -g pane-border-style bg=terminal,fg=grey,dim
set -g pane-active-border-style fg=orange,bright,bg=terminal

#
# ===

# disable right mouse click
unbind -n MouseDown3Pane
